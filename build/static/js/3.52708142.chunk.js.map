{"version":3,"sources":["pages/AddCommunity/style.jsx","pages/AddCommunity/submitPage.tsx","pages/AddCommunity/index.jsx","api/database/useCreateDAO.js"],"names":["Page","styled","main","Container","div","Heading","h1","SpaceBox","canvas","Text","p","SubmitPage","navigate","useNavigate","useEffect","space","window","innerHeight","innerWidth","id","Button","type","onClick","AddCommunity","useAuth","userInfo","walletConnected","uploadFile","useFileUpload","useState","name","setName","tokenAddress","setTokenAddress","wallet","whitelistedAddresses","setWhitelistedAddresses","description","setDescription","categories","setCategories","network","url","socials","setSocials","chains","setChains","bgFile","setBGFile","logoFile","setLogoFile","spaceId","setSpaceId","updateLoading","setUpdateLoading","useMutation","gql","DAO_CHANNELS_CREATE","createDAO","loading","called","data","error","useMemo","useCreateDAOWithChannels","toggleCheckbox","e","value","target","includes","checked","filter","cat","toggleCheckboxChain","submitToDB","a","uuidv4","split","pop","logoURL","backgroundURL","newInfo","dao","toLowerCase","replace","snapshotID","createdAt","Date","toISOString","updatedAt","variables","input","alert","console","log","to","Header","Form","Fieldset","Label","htmlFor","Input","onChange","placeholder","required","label","setImage","Textarea","marginBottom","GridBox","Checkbox","map","social","idx","InputWrapper","Select","style","marginRight","newName","copy","i","changeSocialName","selected","disabled","startsWith","preventDefault","changeSocial","IconButton","deleteSocial","marginLeft","length","width","alignSelf","address","newList","changeWhitelistedAddress","addr","index","Loader","color","Footer"],"mappings":"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","file":"static/js/3.52708142.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Page = styled.main`\n    min-height: 100vh;\n    background-color: transparent;\n    height: 100%;\n    position: relative;\n\n    overflow-x: hidden;\n\n    /* &:before {\n        position: absolute;\n        content: '';\n        z-index: -2;\n        background-color: #170627;\n        height: 100%;\n        width: 100%;\n    } */\n`;\n\nexport const Container = styled.div`\n    display: flex;\n    flex: 1;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 0 20%;\n    // flex:.5;\n    // display: grid;\n    // grid-template-columns: 3fr 6fr 3fr;\n    margin: 50px 0;\n`;\n\nexport const Heading = styled.h1`\n    font-family: Poppins;\n    font-style: normal;\n    font-weight: bold;\n    font-size: 80px;\n    line-height: 100px;\n    /* or 94% */\n\n    text-align: center;\n    letter-spacing: -0.05em;\n\n    /* Background */\n    background: linear-gradient(\n        88.04deg,\n        #ee787b 22.54%,\n        #e153f2 41.08%,\n        #495be0 65.25%,\n        #6a39f3 86.1%\n    );\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    -moz-background-clip: text;\n    -moz-text-fill-color: transparent;\n\n    grid-column: 1/4;\n\n    margin-bottom: 50px;\n`;\nexport const SpaceBox = styled.canvas`\n    position: absolute;\n    top: 90px;\n    z-index: -1;\n    left: 0;\n    width: 100%;\n`;\n\nexport const Text = styled.p`\n    margin: 50px auto;\n    color: white;\n    font-family: Poppins;\n    font-style: normal;\n`;\n","import React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Header from '../../components/Header';\nimport space from '../../utils/canvas';\nimport * as Styled from './style';\nimport { FormStyled } from '../../components/Form';\n\nconst SubmitPage = (): JSX.Element => {\n    const navigate = useNavigate();\n\n    useEffect(\n        () => space(window.innerHeight, window.innerWidth),\n        [window.innerHeight, window.innerWidth]\n    );\n\n    const backToHome = () => {\n        navigate('/');\n    };\n\n    return (\n        <Styled.Page>\n            <Header />\n            <Styled.SpaceBox id='space-canvas' />\n            <Styled.Container>\n                <Styled.Heading>\n                    We're Building Communities Together\n                </Styled.Heading>\n                <Styled.Text>\n                    Thank you, your DAO was successfully added\n                </Styled.Text>\n                <FormStyled.Button\n                    id='submit_msg'\n                    type='button'\n                    onClick={backToHome}\n                >\n                    Back To Home\n                </FormStyled.Button>\n            </Styled.Container>\n            {/* <Footer /> */}\n        </Styled.Page>\n    );\n};\n\nexport default SubmitPage;\n","// Libraries/components\nimport React from 'react';\nimport { FaTrashAlt, FaPlus } from 'react-icons/fa';\nimport { Navigate } from 'react-router-dom';\n\n// Styling\nimport * as Styled from './style';\nimport { FormStyled } from '../../components/Form';\n\n// Components\nimport Footer from '../../components/Footer';\nimport Header from '../../components/Header';\nimport Loader from '../../components/Loader';\nimport SubmitPage from './submitPage';\nimport { ImageUpload } from '../../components/Form';\n\n// Hooks\nimport { useState, useEffect } from 'react';\nimport { useAuth } from '../../contexts/UserContext';\nimport { useCreateDAOWithChannels } from '../../api/database/useCreateDAO';\nimport useFileUpload from '../../api/useFileUpload';\n\n// Utils\nimport space from '../../utils/canvas';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst AddCommunity = () => {\n    const { userInfo, walletConnected } = useAuth();\n    const { uploadFile } = useFileUpload();\n\n    const [name, setName] = useState('');\n    const [tokenAddress, setTokenAddress] = useState('');\n    const [whitelistedAddresses, setWhitelistedAddresses] = useState([\n        walletConnected ? userInfo.wallet : '',\n    ]);\n    const [description, setDescription] = useState('');\n    const [categories, setCategories] = useState([]);\n    const [socials, setSocials] = useState([\n        {\n            network: 'twitter',\n            url: '',\n        },\n        {\n            network: 'discord',\n            url: '',\n        },\n    ]);\n    const [chains, setChains] = useState([]);\n    const [bgFile, setBGFile] = useState();\n    const [logoFile, setLogoFile] = useState();\n    const [spaceId, setSpaceId] = useState('');\n    const [updateLoading, setUpdateLoading] = useState(false);\n\n    const { createDAO, data, error, called, loading } =\n        useCreateDAOWithChannels();\n\n    useEffect(() => {\n        if (walletConnected) {\n            space(window.innerHeight, window.innerWidth);\n        }\n    }, [window.innerHeight, window.innerWidth]);\n\n    const toggleCheckbox = (e) => {\n        const value = e.target.value;\n        // console.log(categories)\n\n        if (categories.includes(value) && !e.target.checked) {\n            setCategories(categories.filter((cat) => cat !== value));\n        } else if (e.target.checked) {\n            setCategories([...categories, value]);\n        }\n    };\n\n    const toggleCheckboxChain = (e) => {\n        const value = e.target.value;\n        if (chains.includes(value) && !e.target.checked) {\n            setChains(chains.filter((cat) => cat !== value));\n        } else if (e.target.checked) {\n            setChains([...chains, value]);\n        }\n    };\n\n    // Handlers\n    const changeSocial = (idx, e) => {\n        e.preventDefault();\n        let copy = [...socials];\n        copy[idx].url = e.target.value;\n        setSocials(copy);\n    };\n\n    const deleteSocial = (idx) =>\n        setSocials(socials.filter((social, i) => i !== idx));\n\n    const changeSocialName = (idx, newName) => {\n        let copy = socials.map((social, i) => {\n            if (i === idx) {\n                return {\n                    ...social,\n                    network: newName,\n                };\n            }\n\n            return social;\n        });\n        setSocials(copy);\n    };\n\n    const submitToDB = async () => {\n        setUpdateLoading(true);\n        try {\n            // DAO ID\n            const id = uuidv4();\n\n            // Upload files to S3\n            const logoURL = await uploadFile(\n                `daos/${id}/logo.${logoFile.name.split('.').pop()}`,\n                logoFile\n            );\n            const backgroundURL = await uploadFile(\n                `daos/${id}/background.${bgFile.name.split('.').pop()}`,\n                bgFile\n            );\n\n            const newInfo = {\n                id,\n                dao: name\n                    .toLowerCase()\n                    .replace(/ /g, '-')\n                    .replace(/[-]+/g, '-')\n                    .replace(/[^\\w-]+/g, ''),\n                name,\n                backgroundURL,\n                logoURL,\n                tokenAddress,\n                description,\n                categories,\n                chains,\n                socials,\n                whitelistedAddresses,\n                snapshotID: spaceId,\n                createdAt: new Date().toISOString(),\n                updatedAt: new Date().toISOString(),\n            };\n\n            await createDAO({\n                variables: {\n                    input: newInfo,\n                },\n            });\n        } catch (err) {\n            alert('An error occurred. Please try again later!');\n            console.log(err);\n        }\n        setUpdateLoading(false);\n    };\n\n    if (error) {\n        console.log(error);\n        return <Navigate to='/404' />;\n    }\n\n    const changeWhitelistedAddress = (e, idx) => {\n        e.preventDefault();\n        let newList = [...whitelistedAddresses];\n        newList[idx] = e.target.value;\n        setWhitelistedAddresses(newList);\n    };\n\n    if (!walletConnected) {\n        return <Navigate to='/sign-in' />;\n    }\n\n    return data && called ? (\n        <SubmitPage\n            dao={name\n                .toLowerCase()\n                .replace(/ /g, '-')\n                .replace(/[-]+/g, '-')\n                .replace(/[^\\w-]+/g, '')}\n        />\n    ) : (\n        <Styled.Page>\n            <Header />\n            <Styled.Container>\n                <Styled.SpaceBox id='space-canvas' />\n                <Styled.Heading>Add your Community</Styled.Heading>\n\n                <FormStyled.Fieldset>\n                    <FormStyled.Label htmlFor='name'>Name*</FormStyled.Label>\n                    <FormStyled.Input\n                        onChange={(e) => setName(e.target.value)}\n                        type='text'\n                        id='name'\n                        name='name'\n                        placeholder='Your Community Name'\n                        value={name}\n                        required\n                    />\n                </FormStyled.Fieldset>\n\n                <ImageUpload\n                    htmlFor='logo'\n                    label='Logo'\n                    setImage={setLogoFile}\n                />\n                <ImageUpload\n                    htmlFor='background'\n                    label='Background Image'\n                    setImage={setBGFile}\n                />\n\n                <FormStyled.Fieldset>\n                    <FormStyled.Label htmlFor='description'>\n                        Description*\n                    </FormStyled.Label>\n                    <FormStyled.Textarea\n                        onChange={(e) => setDescription(e.target.value)}\n                        value={description}\n                    />\n                </FormStyled.Fieldset>\n\n                <FormStyled.Fieldset marginBottom='30px'>\n                    <FormStyled.Label>Categories*</FormStyled.Label>\n                    <FormStyled.GridBox>\n                        <FormStyled.Checkbox\n                            id='category-1'\n                            name='category'\n                            value='Protocol'\n                            label='Protocol'\n                            onChange={toggleCheckbox}\n                            checked={categories.includes('Protocol')}\n                        />\n                        <FormStyled.Checkbox\n                            id='category-2'\n                            name='category'\n                            value='DeFi'\n                            label='DeFi'\n                            onChange={toggleCheckbox}\n                            checked={categories.includes('DeFi')}\n                        />\n                        <FormStyled.Checkbox\n                            id='category-3'\n                            name='category'\n                            value='Social'\n                            label='Social'\n                            onChange={toggleCheckbox}\n                            checked={categories.includes('Social')}\n                        />\n                        <FormStyled.Checkbox\n                            id='category-4'\n                            name='category'\n                            value='Grant'\n                            label='Grant'\n                            onChange={toggleCheckbox}\n                            checked={categories.includes('Grant')}\n                        />\n                        <FormStyled.Checkbox\n                            id='category-5'\n                            name='category'\n                            value='Investment'\n                            label='Investment'\n                            onChange={toggleCheckbox}\n                            checked={categories.includes('Investment')}\n                        />\n                        <FormStyled.Checkbox\n                            id='category-6'\n                            name='category'\n                            value='Collector'\n                            label='Collector'\n                            onChange={toggleCheckbox}\n                            checked={categories.includes('Collector')}\n                        />\n                        <FormStyled.Checkbox\n                            id='category-7'\n                            name='category'\n                            value='Framework'\n                            label='Framework'\n                            onChange={toggleCheckbox}\n                            checked={categories.includes('Framework')}\n                        />\n                        <FormStyled.Checkbox\n                            id='category-8'\n                            name='category'\n                            value='Gaming'\n                            label='Gaming'\n                            onChange={toggleCheckbox}\n                            checked={categories.includes('Gaming')}\n                        />\n                        <FormStyled.Checkbox\n                            id='category-9'\n                            name='category'\n                            value='DeSci'\n                            label='DeSci'\n                            onChange={toggleCheckbox}\n                            checked={categories.includes('DeSci')}\n                        />\n                    </FormStyled.GridBox>\n                </FormStyled.Fieldset>\n\n                <FormStyled.Fieldset>\n                    <FormStyled.Label htmlFor='socials'>\n                        Socials\n                    </FormStyled.Label>\n                    {socials.map((social, idx) => {\n                        return (\n                            <FormStyled.InputWrapper key={idx}>\n                                <FormStyled.Select\n                                    style={{ marginRight: '10px' }}\n                                    onChange={(e) =>\n                                        changeSocialName(idx, e.target.value)\n                                    }\n                                >\n                                    <option\n                                        value='twitter'\n                                        selected={social.network === 'twitter'}\n                                        disabled={socials\n                                            .map((social) => social.network)\n                                            .includes('twitter')}\n                                    >\n                                        Twitter\n                                    </option>\n                                    <option\n                                        value='telegram'\n                                        selected={social.network === 'telegram'}\n                                        disabled={socials\n                                            .map((social) => social.network)\n                                            .includes('telegram')}\n                                    >\n                                        Telegram\n                                    </option>\n                                    <option\n                                        value='medium'\n                                        selected={social.network === 'medium'}\n                                        disabled={socials\n                                            .map((social) => social.network)\n                                            .includes('medium')}\n                                    >\n                                        Medium\n                                    </option>\n                                    <option\n                                        value='github'\n                                        selected={social.network === 'github'}\n                                        disabled={socials\n                                            .map((social) => social.network)\n                                            .includes('github')}\n                                    >\n                                        Github\n                                    </option>\n                                    <option\n                                        value='discord'\n                                        selected={social.network === 'discord'}\n                                        disabled={socials\n                                            .map((social) => social.network)\n                                            .includes('discord')}\n                                    >\n                                        Discord\n                                    </option>\n                                    <option\n                                        value='website'\n                                        selected={social.network === 'website'}\n                                        disabled={socials\n                                            .map((social) => social.network)\n                                            .includes('website')}\n                                    >\n                                        Website\n                                    </option>\n                                    <option\n                                        value='chat'\n                                        selected={social.network === 'chat'}\n                                        disabled={socials\n                                            .map((social) => social.network)\n                                            .includes('chat')}\n                                    >\n                                        Chat\n                                    </option>\n                                    <option\n                                        value='other'\n                                        selected={social.network.startsWith(\n                                            'any'\n                                        )}\n                                    >\n                                        Other\n                                    </option>\n                                </FormStyled.Select>\n                                <FormStyled.Input\n                                    id={`social-${social.network}`}\n                                    type='text'\n                                    onChange={(e) => changeSocial(idx, e)}\n                                    value={social.url}\n                                    placeholder='Add your network URL'\n                                    required\n                                />\n                                <FormStyled.IconButton\n                                    onClick={() => deleteSocial(idx)}\n                                    style={{ marginLeft: '10px' }}\n                                >\n                                    <FaTrashAlt />\n                                </FormStyled.IconButton>\n                            </FormStyled.InputWrapper>\n                        );\n                    })}\n                    <FormStyled.IconButton\n                        onClick={() =>\n                            setSocials([\n                                ...socials,\n                                {\n                                    network: `any-${socials.length}`,\n                                    url: '',\n                                },\n                            ])\n                        }\n                        style={{\n                            width: 'fit-content',\n                            alignSelf: 'center',\n                        }}\n                    >\n                        <FaPlus />\n                    </FormStyled.IconButton>\n                </FormStyled.Fieldset>\n\n                <FormStyled.Fieldset marginBottom='30px'>\n                    <FormStyled.Label>Chain</FormStyled.Label>\n                    <FormStyled.GridBox>\n                        <FormStyled.Checkbox\n                            id='chain-1'\n                            name='chain'\n                            value='ethereum'\n                            label='Ethereum'\n                            onChange={toggleCheckboxChain}\n                            checked={chains.includes('Ethereum')}\n                        />\n                        <FormStyled.Checkbox\n                            id='chain-2'\n                            name='chain'\n                            value='solana'\n                            label='Solana'\n                            onChange={toggleCheckboxChain}\n                            checked={chains.includes('Solana')}\n                        />\n                        <FormStyled.Checkbox\n                            id='chain-3'\n                            name='chain'\n                            value='Polygon'\n                            label='Polygon'\n                            onChange={toggleCheckboxChain}\n                            checked={chains.includes('Polygon')}\n                        />\n                        <FormStyled.Checkbox\n                            id='chain-4'\n                            name='chain'\n                            value='NEAR'\n                            label='NEAR'\n                            onChange={toggleCheckboxChain}\n                            checked={chains.includes('NEAR')}\n                        />\n                        <FormStyled.Checkbox\n                            id='chain-5'\n                            name='chain'\n                            value='Avalanche'\n                            label='Avalanche'\n                            onChange={toggleCheckboxChain}\n                            checked={chains.includes('Avalanche')}\n                        />\n                        <FormStyled.Checkbox\n                            id='chain-6'\n                            name='chain'\n                            value='Binance'\n                            label='Binance'\n                            onChange={toggleCheckboxChain}\n                            checked={chains.includes('Binance')}\n                        />\n                        <FormStyled.Checkbox\n                            id='chain-7'\n                            name='chain'\n                            value='Bitcoin'\n                            label='Bitcoin'\n                            onChange={toggleCheckboxChain}\n                            checked={chains.includes('Bitcoin')}\n                        />\n                        <FormStyled.Checkbox\n                            id='chain-8'\n                            name='chain'\n                            value='Other'\n                            label='Other'\n                            onChange={toggleCheckboxChain}\n                            checked={chains.includes('Other')}\n                        />\n                    </FormStyled.GridBox>\n                </FormStyled.Fieldset>\n\n                <FormStyled.Fieldset>\n                    <FormStyled.Label htmlFor='whitelistedAddress'>\n                        Whitelisted Addresses\n                    </FormStyled.Label>\n                    {whitelistedAddresses.map((address, idx) => {\n                        return (\n                            <FormStyled.InputWrapper key={idx}>\n                                <FormStyled.Input\n                                    id={`social-${idx}`}\n                                    type='text'\n                                    onChange={(e) =>\n                                        changeWhitelistedAddress(e, idx)\n                                    }\n                                    value={whitelistedAddresses[idx]}\n                                    required\n                                />\n                                <FormStyled.IconButton\n                                    onClick={() =>\n                                        setWhitelistedAddresses(\n                                            whitelistedAddresses.filter(\n                                                (addr, index) => idx !== index\n                                            )\n                                        )\n                                    }\n                                    style={{ marginLeft: '10px' }}\n                                >\n                                    <FaTrashAlt />\n                                </FormStyled.IconButton>\n                            </FormStyled.InputWrapper>\n                        );\n                    })}\n                    <FormStyled.IconButton\n                        onClick={() =>\n                            setWhitelistedAddresses([\n                                ...whitelistedAddresses,\n                                '',\n                            ])\n                        }\n                        style={{\n                            width: 'fit-content',\n                            alignSelf: 'center',\n                        }}\n                    >\n                        <FaPlus />\n                    </FormStyled.IconButton>\n                </FormStyled.Fieldset>\n\n                <FormStyled.Fieldset>\n                    <FormStyled.Label htmlFor='tokenAddress'>\n                        Token Address*\n                    </FormStyled.Label>\n                    <FormStyled.Input\n                        id='tokenAddress'\n                        type='text'\n                        onChange={(e) => setTokenAddress(e.target.value)}\n                        value={tokenAddress}\n                        required\n                    />\n                </FormStyled.Fieldset>\n\n                <FormStyled.Fieldset>\n                    <FormStyled.Label htmlFor='SpaceId'>\n                        Snapshot Space Id\n                    </FormStyled.Label>\n                    <FormStyled.Input\n                        id='SpaceId'\n                        type='text'\n                        onChange={(e) => setSpaceId(e.target.value)}\n                        value={spaceId}\n                        required\n                    />\n                </FormStyled.Fieldset>\n\n                <FormStyled.Button id='submit_msg' onClick={submitToDB}>\n                    {updateLoading && <Loader color='white' />}\n                    Save Changes\n                </FormStyled.Button>\n            </Styled.Container>\n            <Footer />\n        </Styled.Page>\n    );\n};\n\nexport default AddCommunity;\n","import { useMemo } from 'react';\nimport { useMutation, gql } from '@apollo/client';\nimport {\n    createDao as DAO_CREATE,\n    createDaoWithChannels as DAO_CHANNELS_CREATE,\n} from '../../graphql/mutations';\n\nexport const useCreateDAO = () => {\n    const [createDAO, { loading, called, data, error }] = useMutation(\n        gql(DAO_CREATE)\n    );\n\n    return useMemo(\n        () => ({\n            createDAO,\n            data,\n            error,\n            loading,\n        }),\n        [called, createDAO, loading, DAO_CREATE, error]\n    );\n};\n\nexport const useCreateDAOWithChannels = () => {\n    const [createDAO, { loading, called, data, error }] = useMutation(\n        gql(DAO_CHANNELS_CREATE)\n    );\n\n    return useMemo(\n        () => ({\n            createDAO,\n            data,\n            called,\n            error,\n            loading,\n        }),\n        [called, createDAO, loading, DAO_CHANNELS_CREATE, error]\n    );\n};\n\nexport default useCreateDAO;\n"],"sourceRoot":""}